{"ast":null,"code":"var _jsxFileName = \"/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/FixtureLineup.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport head from 'lodash/head';\nimport concat from 'lodash/concat';\nimport forEach from 'lodash/forEach';\nimport last from 'lodash/last';\nimport SoccerLineUp from 'react-soccer-lineup';\nimport { lineupTempData } from '../temp/tempData';\n\nconst FixtureLineup = fixtureId => {\n  const {\n    0: lineupData,\n    1: setLineupData\n  } = useState(useSelector(state => state.lineupData)); // const [homeSquad, setHomeSquad] = useState(null)\n  // const [awaySquad, setAwaySquad] = useState(null)\n  // let homeSquad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n  // let awaySquad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n\n  let homeTeam = {\n    \"color\": \"red\",\n    \"squad\": {\n      \"gk\": {},\n      \"df\": [],\n      \"cm\": [],\n      \"fw\": []\n    }\n  };\n  let awayTeam = {\n    \"color\": \"blue\",\n    \"squad\": {\n      \"gk\": {},\n      \"df\": [],\n      \"cm\": [],\n      \"fw\": []\n    }\n  };\n\n  if (lineupData === null) {\n    setLineupData(lineupTempData);\n    console.log(lineupData);\n  }\n\n  const getStartXI = (startXI, team) => {\n    // let squad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n    forEach(startXI, item => {\n      switch (item.player.pos) {\n        case \"G\":\n          team.squad.gk = item;\n          break;\n\n        case \"D\":\n          team.squad.df = concat(squad.df, item);\n          break;\n\n        case \"M\":\n          team.squad.cm = concat(squad.cm, item);\n          break;\n\n        case \"F\":\n          team.squad.fw = concat(team.squad.fw, item);\n          break;\n\n        default:\n          break;\n      }\n    });\n    return team;\n  };\n\n  useEffect(() => {\n    homeTeam = getStartXI(head(lineupData.response).startXI, homeTeam);\n    awayTeam = getStartXI(last(lineupData.response).startXI, \"blue\");\n  }, []);\n  return __jsx(SoccerLineUp, {\n    size: \"small\",\n    color: \"lightseagreen\",\n    pattern: \"circles\",\n    homeTeam: homeTeam,\n    awayTeam: awayTeam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default FixtureLineup;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/FixtureLineup.jsx"],"names":["React","useState","useEffect","useSelector","head","concat","forEach","last","SoccerLineUp","lineupTempData","FixtureLineup","fixtureId","lineupData","setLineupData","state","homeTeam","awayTeam","console","log","getStartXI","startXI","team","item","player","pos","squad","gk","df","cm","fw","response"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;AAEA,MAAMC,aAAa,GAAIC,SAAD,IAAe;AACjC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BZ,QAAQ,CAACE,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACF,UAAhB,CAAZ,CAA5C,CADiC,CAEjC;AACA;AACA;AACA;;AACA,MAAIG,QAAQ,GAAG;AACX,aAAS,KADE;AAEX,aAAS;AAAE,YAAM,EAAR;AAAY,YAAM,EAAlB;AAAsB,YAAM,EAA5B;AAAgC,YAAM;AAAtC;AAFE,GAAf;AAIA,MAAIC,QAAQ,GAAG;AACX,aAAS,MADE;AAEX,aAAS;AAAE,YAAM,EAAR;AAAY,YAAM,EAAlB;AAAsB,YAAM,EAA5B;AAAgC,YAAM;AAAtC;AAFE,GAAf;;AAIA,MAAIJ,UAAU,KAAK,IAAnB,EAAwB;AACpBC,IAAAA,aAAa,CAACJ,cAAD,CAAb;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACH;;AACD,QAAMO,UAAU,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAClC;AACAf,IAAAA,OAAO,CAACc,OAAD,EAAUE,IAAI,IAAI;AACrB,cAAOA,IAAI,CAACC,MAAL,CAAYC,GAAnB;AACI,aAAK,GAAL;AACIH,UAAAA,IAAI,CAACI,KAAL,CAAWC,EAAX,GAAgBJ,IAAhB;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,IAAI,CAACI,KAAL,CAAWE,EAAX,GAAgBtB,MAAM,CAACoB,KAAK,CAACE,EAAP,EAAWL,IAAX,CAAtB;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,IAAI,CAACI,KAAL,CAAWG,EAAX,GAAgBvB,MAAM,CAACoB,KAAK,CAACG,EAAP,EAAWN,IAAX,CAAtB;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,IAAI,CAACI,KAAL,CAAWI,EAAX,GAAgBxB,MAAM,CAACgB,IAAI,CAACI,KAAL,CAAWI,EAAZ,EAAgBP,IAAhB,CAAtB;AACA;;AACJ;AACI;AAdR;AAgBH,KAjBM,CAAP;AAkBA,WAAOD,IAAP;AACH,GArBD;;AAuBAnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,GAAGI,UAAU,CAACf,IAAI,CAACQ,UAAU,CAACkB,QAAZ,CAAJ,CAA0BV,OAA3B,EAAoCL,QAApC,CAArB;AACAC,IAAAA,QAAQ,GAAGG,UAAU,CAACZ,IAAI,CAACK,UAAU,CAACkB,QAAZ,CAAJ,CAA0BV,OAA3B,EAAoC,MAApC,CAArB;AAEH,GAJQ,EAIN,EAJM,CAAT;AASA,SACI,MAAC,YAAD;AACI,IAAA,IAAI,EAAG,OADX;AAEI,IAAA,KAAK,EAAG,eAFZ;AAGI,IAAA,OAAO,EAAG,SAHd;AAII,IAAA,QAAQ,EAAGL,QAJf;AAKI,IAAA,QAAQ,EAAGC,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CA5DD;;AA6DA,eAAeN,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport head from 'lodash/head'\nimport concat from 'lodash/concat'\nimport forEach from 'lodash/forEach'\nimport last from 'lodash/last'\nimport SoccerLineUp from 'react-soccer-lineup'\nimport {lineupTempData} from '../temp/tempData'\n\nconst FixtureLineup = (fixtureId) => {\n    const [lineupData, setLineupData] = useState(useSelector(state => state.lineupData))\n    // const [homeSquad, setHomeSquad] = useState(null)\n    // const [awaySquad, setAwaySquad] = useState(null)\n    // let homeSquad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n    // let awaySquad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n    let homeTeam = {\n        \"color\": \"red\",\n        \"squad\": { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n    }\n    let awayTeam = {\n        \"color\": \"blue\",\n        \"squad\": { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n    }\n    if (lineupData === null){\n        setLineupData(lineupTempData)\n        console.log(lineupData)\n    }\n    const getStartXI = (startXI, team) => {\n        // let squad = { \"gk\": {}, \"df\": [], \"cm\": [], \"fw\": [] }\n        forEach(startXI, item => {\n            switch(item.player.pos){\n                case \"G\":\n                    team.squad.gk = item\n                    break\n                case \"D\":\n                    team.squad.df = concat(squad.df, item)\n                    break\n                case \"M\":\n                    team.squad.cm = concat(squad.cm, item)\n                    break\n                case \"F\":\n                    team.squad.fw = concat(team.squad.fw, item)\n                    break\n                default:\n                    break\n            }\n        })\n        return team\n    }\n\n    useEffect(() => {         \n        homeTeam = getStartXI(head(lineupData.response).startXI, homeTeam)\n        awayTeam = getStartXI(last(lineupData.response).startXI, \"blue\")\n        \n    }, [])\n    \n\n    \n\n    return (\n        <SoccerLineUp\n            size={ \"small\" }\n            color={ \"lightseagreen\" }\n            pattern={ \"circles\" }\n            homeTeam={ homeTeam }\n            awayTeam={ awayTeam }\n        />\n    )\n\n}\nexport default FixtureLineup"]},"metadata":{},"sourceType":"module"}