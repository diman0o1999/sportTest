{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from './actions';\nexport var exampleInitialState = {\n  leaguesData: null,\n  seasonsData: null,\n  fixtureData: null,\n  lineupData: null,\n  error: false,\n  leagueInfo: {\n    status: false,\n    id: null\n  }\n};\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    seasonStatus = _useState2[0],\n    setSeasonStatus = _useState2[1];\n\nvar _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    seasonId = _useState4[0],\n    setSeasonId = _useState4[1];\n\nvar _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fixtureStatus = _useState6[0],\n    setFixtureStatus = _useState6[1];\n\nvar _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fixtureId = _useState8[0],\n    setFixtureId = _useState8[1];\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FAILURE:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n    // case actionTypes.CHANGE_LEAGUE_INFO:\n    //   return {\n    //     ...state,\n    //     ...{ leagueInfo: {status: true, id: action.payload }},\n    //   }\n\n    case actionTypes.LOAD_LEAGUES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        leaguesData: action.data\n      });\n\n    case actionTypes.LOAD_FIXTURES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        fixtureData: action.data\n      });\n\n    case actionTypes.LOAD_LINEUP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        lineupData: action.data\n      });\n\n    case actionTypes.LOAD_SEASONS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        seasonsData: action.data,\n        leagueInfo: {\n          status: true,\n          id: action.payload\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/reducer.js"],"names":["actionTypes","exampleInitialState","leaguesData","seasonsData","fixtureData","lineupData","error","leagueInfo","status","id","useState","seasonStatus","setSeasonStatus","seasonId","setSeasonId","fixtureStatus","setFixtureStatus","fixtureId","setFixtureId","reducer","state","action","type","FAILURE","LOAD_LEAGUES_SUCCESS","data","LOAD_FIXTURES_SUCCESS","LOAD_LINEUP_SUCCESS","LOAD_SEASONS_SUCCESS","payload"],"mappings":";;;;;;;AAAA,SAASA,WAAT,QAA4B,WAA5B;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,EAAAA,WAAW,EAAE,IADoB;AAEjCC,EAAAA,WAAW,EAAE,IAFoB;AAGjCC,EAAAA,WAAW,EAAE,IAHoB;AAIjCC,EAAAA,UAAU,EAAE,IAJqB;AAKjCC,EAAAA,KAAK,EAAE,KAL0B;AAMjCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,KADE;AAEVC,IAAAA,EAAE,EAAE;AAFM;AANqB,CAA5B;;gBAWiCC,QAAQ,CAAC,KAAD,C;;IAAzCC,Y;IAAcC,e;;iBACaF,QAAQ,CAAC,IAAD,C;;IAAjCG,Q;IAAUC,W;;iBAEyBJ,QAAQ,CAAC,KAAD,C;;IAA3CK,a;IAAeC,gB;;iBACYN,QAAQ,CAAC,IAAD,C;;IAAnCO,S;IAAWC,Y;;AACpB,SAASC,OAAT,GAAsD;AAAA,MAArCC,KAAqC,uEAA7BnB,mBAA6B;AAAA,MAARoB,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,WAAW,CAACuB,OAAjB;AACE,6CACKH,KADL,GAEK;AAAEd,QAAAA,KAAK,EAAEe,MAAM,CAACf;AAAhB,OAFL;AAKF;AACA;AACA;AACA;AACA;;AAEA,SAAKN,WAAW,CAACwB,oBAAjB;AACE,6CACKJ,KADL,GAEK;AAAElB,QAAAA,WAAW,EAAEmB,MAAM,CAACI;AAAtB,OAFL;;AAKF,SAAKzB,WAAW,CAAC0B,qBAAjB;AACE,6CACKN,KADL,GAEK;AAAEhB,QAAAA,WAAW,EAAEiB,MAAM,CAACI;AAAtB,OAFL;;AAKF,SAAKzB,WAAW,CAAC2B,mBAAjB;AACE,6CACKP,KADL,GAEK;AAAEf,QAAAA,UAAU,EAAEgB,MAAM,CAACI;AAArB,OAFL;;AAKF,SAAKzB,WAAW,CAAC4B,oBAAjB;AACE,6CACKR,KADL,GAEK;AAAEjB,QAAAA,WAAW,EAAEkB,MAAM,CAACI,IAAtB;AAA4BlB,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAE,IAAT;AAAeC,UAAAA,EAAE,EAAEY,MAAM,CAACQ;AAA1B;AAAxC,OAFL;;AAKF;AACE,aAAOT,KAAP;AAtCJ;AAwCD;;AAED,eAAeD,OAAf","sourcesContent":["import { actionTypes } from './actions'\n\nexport const exampleInitialState = {\n  leaguesData: null,\n  seasonsData: null,\n  fixtureData: null,\n  lineupData: null,\n  error: false,\n  leagueInfo: {\n    status: false,\n    id: null\n  },\n}\nconst [seasonStatus, setSeasonStatus] = useState(false)\n  const [seasonId, setSeasonId] = useState(null)\n\n  const [fixtureStatus, setFixtureStatus] = useState(false)\n  const [fixtureId, setFixtureId] = useState(null)\nfunction reducer(state = exampleInitialState, action) {\n\n  switch (action.type) {\n    case actionTypes.FAILURE:\n      return {\n        ...state,\n        ...{ error: action.error },\n      }\n\n    // case actionTypes.CHANGE_LEAGUE_INFO:\n    //   return {\n    //     ...state,\n    //     ...{ leagueInfo: {status: true, id: action.payload }},\n    //   }\n\n    case actionTypes.LOAD_LEAGUES_SUCCESS:\n      return {\n        ...state,\n        ...{ leaguesData: action.data },\n      }\n\n    case actionTypes.LOAD_FIXTURES_SUCCESS:\n      return {\n        ...state,\n        ...{ fixtureData: action.data },\n      }\n\n    case actionTypes.LOAD_LINEUP_SUCCESS:\n      return {\n        ...state,\n        ...{ lineupData: action.data },\n      }\n\n    case actionTypes.LOAD_SEASONS_SUCCESS:\n      return {\n        ...state,\n        ...{ seasonsData: action.data, leagueInfo: {status: true, id: action.payload } },\n      }\n    \n    default:\n      return state\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}