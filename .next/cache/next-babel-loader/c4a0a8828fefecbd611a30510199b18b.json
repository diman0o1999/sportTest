{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/gr/Work/TestReact/test-sport-appREP/sportTest/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLeagues } from '../actions';\nimport League from '../components/League';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(League, {\n        title: \"Leagues\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var _props$ctx, store, isServer;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _props$ctx = props.ctx, store = _props$ctx.store, isServer = _props$ctx.isServer;\n\n                if (!store.getState().leaguesData) {\n                  store.dispatch(loadLeagues());\n                }\n\n                return _context.abrupt(\"return\", {\n                  isServer: isServer\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default connect()(Index);","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/pages/index.js"],"names":["React","connect","loadLeagues","League","Index","props","ctx","store","isServer","getState","leaguesData","dispatch","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,K;;;;;;;;;;;;;6BASK;AACP,aAAO,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;uGAV4BC,K;;;;;;;6BACCA,KAAK,CAACC,G,EAA1BC,K,cAAAA,K,EAAOC,Q,cAAAA,Q;;AACf,oBAAI,CAACD,KAAK,CAACE,QAAN,GAAiBC,WAAtB,EAAmC;AACjCH,kBAAAA,KAAK,CAACI,QAAN,CAAeT,WAAW,EAA1B;AACD;;iDACM;AAAEM,kBAAAA,QAAQ,EAARA;AAAF,iB;;;;;;;;;;;;;;;;;;;EANSR,KAAK,CAACY,S;;AAc1B,eAAeX,OAAO,GAAGG,KAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { loadLeagues } from '../actions'\nimport League from '../components/League'\n\nclass Index extends React.Component {\n  static async getInitialProps(props) {\n    const { store, isServer } = props.ctx\n    if (!store.getState().leaguesData) {\n      store.dispatch(loadLeagues())\n    }\n    return { isServer }\n  }\n\n  render() {\n    return <League title=\"Leagues\" />\n  }\n}\n\nexport default connect()(Index)\n"]},"metadata":{},"sourceType":"module"}