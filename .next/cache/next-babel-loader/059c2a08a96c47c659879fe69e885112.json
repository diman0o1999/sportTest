{"ast":null,"code":"import { all, call, delay, put, take, takeLatest, takeEvery } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport { actionTypes, failure, loadLeaguesSuccess, loadSeasonsSuccess, loadFixturesSuccess, loadLineupSuccess } from './actions';\nes6promise.polyfill();\n\nfunction* loadLeaguesSaga() {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues', {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`\n      }\n    });\n    const data = yield res.json();\n    yield put(loadLeaguesSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* loadSeasonsSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues?id=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    });\n    const data = yield res.json();\n    yield put(loadSeasonsSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* loadFixturesSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures?league=' + action.payload.idLeague + '&season=' + action.payload.yearSeason, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    });\n    const data = yield res.json();\n    yield put(loadFixturesSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* loadLineupSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures/lineups?fixture=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    });\n    const data = yield res.json();\n    yield put(loadLineupSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* rootSaga() {\n  yield all([takeLatest(actionTypes.LOAD_LEAGUES, loadLeaguesSaga), takeEvery(actionTypes.LOAD_SEASONS, loadSeasonsSaga), takeEvery(actionTypes.LOAD_FIXTURES, loadFixturesSaga), takeEvery(actionTypes.LOAD_LINEUP, loadLineupSaga)]);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/saga.js"],"names":["all","call","delay","put","take","takeLatest","takeEvery","es6promise","actionTypes","failure","loadLeaguesSuccess","loadSeasonsSuccess","loadFixturesSuccess","loadLineupSuccess","polyfill","loadLeaguesSaga","res","fetch","process","env","x_rapidapi_key","data","json","err","loadSeasonsSaga","action","payload","loadFixturesSaga","idLeague","yearSeason","loadLineupSaga","rootSaga","LOAD_LEAGUES","LOAD_SEASONS","LOAD_FIXTURES","LOAD_LINEUP"],"mappings":"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","sourcesContent":["import { all, call, delay, put, take, takeLatest, takeEvery } from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\n\nimport { actionTypes, failure, loadLeaguesSuccess, loadSeasonsSuccess, loadFixturesSuccess, loadLineupSuccess } from './actions'\n\nes6promise.polyfill()\n\nfunction* loadLeaguesSaga() {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues', {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`\n      }\n    })\n    const data = yield res.json()\n\n    yield put(loadLeaguesSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction* loadSeasonsSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues?id=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadSeasonsSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction* loadFixturesSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures?league=' + action.payload.idLeague + '&season=' + action.payload.yearSeason, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadFixturesSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\n\nfunction* loadLineupSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures/lineups?fixture=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadLineupSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\n\nfunction* rootSaga() {\n  yield all([\n    takeLatest(actionTypes.LOAD_LEAGUES, loadLeaguesSaga),\n    takeEvery(actionTypes.LOAD_SEASONS, loadSeasonsSaga),\n    takeEvery(actionTypes.LOAD_FIXTURES, loadFixturesSaga),\n    takeEvery(actionTypes.LOAD_LINEUP, loadLineupSaga)\n  ])\n}\n\nexport default rootSaga\n"]},"metadata":{},"sourceType":"module"}