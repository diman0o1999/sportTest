{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/League.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport map from 'lodash/map';\nimport LeagueSeasons from './LeagueSeasons';\nimport FixtureLineup from './FixtureLineup';\nimport SeasonFixture from './SeasonFixture';\nimport { loadSeasons, changeLeagueInfo } from '../actions';\n\nvar League = function League(_ref) {\n  _s();\n\n  var error = _ref.error,\n      leaguesData = _ref.leaguesData,\n      title = _ref.title,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(false),\n      seasonStatus = _useState[0],\n      setSeasonStatus = _useState[1];\n\n  var _useState2 = useState(null),\n      seasonId = _useState2[0],\n      setSeasonId = _useState2[1];\n\n  var _useState3 = useState(false),\n      fixtureStatus = _useState3[0],\n      setFixtureStatus = _useState3[1];\n\n  var _useState4 = useState(null),\n      fixtureId = _useState4[0],\n      setFixtureId = _useState4[1];\n\n  var leagueLink = function leagueLink(id) {\n    if (id != leagueId) {\n      dispatch(loadSeasons(id)); // dispatch(changeLeagueInfo(id))\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"div\", {\n    className: \"all_tournaments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, leaguesData && map(leaguesData.response, function (item, key) {\n    return __jsx(\"a\", {\n      key: key,\n      onClick: function onClick() {\n        return leagueLink(item.league.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }, item.league.name);\n  })), error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"Error: \", error.message)), leagueStatus && __jsx(LeagueSeasons, {\n    leagueId: leagueId,\n    title: \"Seasons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), \" }\");\n};\n\n_s(League, \"8C4GWNnlpBrRmhux1xemX3nEE+s=\");\n\n_c = League;\nexport default connect(function (state) {\n  return state;\n})(League);\n\nvar _c;\n\n$RefreshReg$(_c, \"League\");","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/League.jsx"],"names":["React","useState","connect","map","LeagueSeasons","FixtureLineup","SeasonFixture","loadSeasons","changeLeagueInfo","League","error","leaguesData","title","dispatch","seasonStatus","setSeasonStatus","seasonId","setSeasonId","fixtureStatus","setFixtureStatus","fixtureId","setFixtureId","leagueLink","id","leagueId","response","item","key","league","name","color","message","leagueStatus","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,WAAR,EAAqBC,gBAArB,QAA4C,YAA5C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2C;AAAA;;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBAIhBZ,QAAQ,CAAC,KAAD,CAJQ;AAAA,MAIjDa,YAJiD;AAAA,MAInCC,eAJmC;;AAAA,mBAKxBd,QAAQ,CAAC,IAAD,CALgB;AAAA,MAKjDe,QALiD;AAAA,MAKvCC,WALuC;;AAAA,mBAOdhB,QAAQ,CAAC,KAAD,CAPM;AAAA,MAOjDiB,aAPiD;AAAA,MAOlCC,gBAPkC;;AAAA,mBAQtBlB,QAAQ,CAAC,IAAD,CARc;AAAA,MAQjDmB,SARiD;AAAA,MAQtCC,YARsC;;AAUxD,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzB,QAAIA,EAAE,IAAIC,QAAV,EAAoB;AAClBX,MAAAA,QAAQ,CAACN,WAAW,CAACgB,EAAD,CAAZ,CAAR,CADkB,CAElB;AACD;AACF,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,IAAIR,GAAG,CAACQ,WAAW,CAACc,QAAb,EAAuB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACrD,WAAO;AAAG,MAAA,GAAG,EAAEA,GAAR;AAAa,MAAA,OAAO,EAAE;AAAA,eAAML,UAAU,CAACI,IAAI,CAACE,MAAL,CAAYL,EAAb,CAAhB;AAAA,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DG,IAAI,CAACE,MAAL,CAAYC,IAAtE,CAAP;AACD,GAFgB,CADrB,CAFF,EASGnB,KAAK,IAAI;AAAG,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoCpB,KAAK,CAACqB,OAA1C,CATZ,CADF,EAaGC,YAAY,IACV,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAIR,QAA3B;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdL,OADF;AA2BD,CA5CD;;GAAMf,M;;KAAAA,M;AA8CN,eAAeP,OAAO,CAAC,UAAC+B,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0BxB,MAA1B,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport map from 'lodash/map'\nimport LeagueSeasons from './LeagueSeasons'\nimport FixtureLineup from './FixtureLineup'\nimport SeasonFixture from './SeasonFixture'\nimport {loadSeasons, changeLeagueInfo} from '../actions'\n\nconst League = ({error, leaguesData, title, dispatch}) => {\n\n  \n\n  const [seasonStatus, setSeasonStatus] = useState(false)\n  const [seasonId, setSeasonId] = useState(null)\n\n  const [fixtureStatus, setFixtureStatus] = useState(false)\n  const [fixtureId, setFixtureId] = useState(null)\n  \n  const leagueLink = (id) => {\n    if (id != leagueId) {\n      dispatch(loadSeasons(id))\n      // dispatch(changeLeagueInfo(id))\n    }\n  }\n  \n  return (\n    <div className=\"main\">\n      <div>\n        <h1>{title}</h1>\n        <div className=\"all_tournaments\">\n          {leaguesData && map(leaguesData.response, (item, key) => {\n              return <a key={key} onClick={() => leagueLink(item.league.id)} >{item.league.name}</a>;\n            })\n          }\n        </div>\n        \n        {error && <p style={{ color: 'red' }}>Error: {error.message}</p>}\n      </div>\n      \n      {leagueStatus && (\n         <LeagueSeasons leagueId = {leagueId} title=\"Seasons\"/>\n      )} }\n\n      {/* {seasonStatus && (\n         <SeasonFixture seasonId = {seasonId} title=\"Matches\"/>\n      )} }\n\n      {fixtureStatus && (\n        <FixtureLineup fixtureId = {fixtureId}/>\n      )} */}\n    </div>\n  )\n}\n\nexport default connect((state) => state)(League)\n"]},"metadata":{},"sourceType":"module"}