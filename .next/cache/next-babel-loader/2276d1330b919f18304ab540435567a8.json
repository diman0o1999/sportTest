{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from './actions';\nexport var exampleInitialState = {\n  leaguesData: null,\n  seasonsData: null,\n  fixtureData: null,\n  lineupData: null,\n  error: false,\n  leagueInfo: {\n    status: false,\n    id: null\n  },\n  seasonInfo: {\n    status: false,\n    id: null\n  },\n  fixtureInfo: {\n    status: false,\n    id: null\n  }\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FAILURE:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n\n    case actionTypes.LOAD_LEAGUES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        leaguesData: action.data\n      });\n\n    case actionTypes.LOAD_FIXTURES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        fixtureData: action.data,\n        seasonInfo: {\n          status: true,\n          id: action.payload.yearSeason\n        }\n      });\n\n    case actionTypes.LOAD_LINEUP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        lineupData: action.data,\n        seasonInfo: {\n          status: true,\n          id: action.payload\n        }\n      });\n\n    case actionTypes.LOAD_SEASONS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        seasonsData: action.data,\n        leagueInfo: {\n          status: true,\n          id: action.payload\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/reducer.js"],"names":["actionTypes","exampleInitialState","leaguesData","seasonsData","fixtureData","lineupData","error","leagueInfo","status","id","seasonInfo","fixtureInfo","reducer","state","action","type","FAILURE","LOAD_LEAGUES_SUCCESS","data","LOAD_FIXTURES_SUCCESS","payload","yearSeason","LOAD_LINEUP_SUCCESS","LOAD_SEASONS_SUCCESS"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,WAA5B;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,EAAAA,WAAW,EAAE,IADoB;AAEjCC,EAAAA,WAAW,EAAE,IAFoB;AAGjCC,EAAAA,WAAW,EAAE,IAHoB;AAIjCC,EAAAA,UAAU,EAAE,IAJqB;AAKjCC,EAAAA,KAAK,EAAE,KAL0B;AAMjCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,KADE;AAEVC,IAAAA,EAAE,EAAE;AAFM,GANqB;AAUjCC,EAAAA,UAAU,EAAE;AACVF,IAAAA,MAAM,EAAE,KADE;AAEVC,IAAAA,EAAE,EAAE;AAFM,GAVqB;AAcjCE,EAAAA,WAAW,EAAE;AACXH,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,EAAE,EAAE;AAFO;AAdoB,CAA5B;;AAoBP,SAASG,OAAT,GAAsD;AAAA,MAArCC,KAAqC,uEAA7BZ,mBAA6B;AAAA,MAARa,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAW,CAACgB,OAAjB;AACE,6CACKH,KADL,GAEK;AAAEP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAAhB,OAFL;;AAMF,SAAKN,WAAW,CAACiB,oBAAjB;AACE,6CACKJ,KADL,GAEK;AAAEX,QAAAA,WAAW,EAAEY,MAAM,CAACI;AAAtB,OAFL;;AAKF,SAAKlB,WAAW,CAACmB,qBAAjB;AACE,6CACKN,KADL,GAEK;AAAET,QAAAA,WAAW,EAAEU,MAAM,CAACI,IAAtB;AAA4BR,QAAAA,UAAU,EAAE;AAACF,UAAAA,MAAM,EAAE,IAAT;AAAeC,UAAAA,EAAE,EAAEK,MAAM,CAACM,OAAP,CAAeC;AAAlC;AAAxC,OAFL;;AAKF,SAAKrB,WAAW,CAACsB,mBAAjB;AACE,6CACKT,KADL,GAEK;AAAER,QAAAA,UAAU,EAAES,MAAM,CAACI,IAArB;AAA2BR,QAAAA,UAAU,EAAE;AAACF,UAAAA,MAAM,EAAE,IAAT;AAAeC,UAAAA,EAAE,EAAEK,MAAM,CAACM;AAA1B;AAAvC,OAFL;;AAKF,SAAKpB,WAAW,CAACuB,oBAAjB;AACE,6CACKV,KADL,GAEK;AAAEV,QAAAA,WAAW,EAAEW,MAAM,CAACI,IAAtB;AAA4BX,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAE,IAAT;AAAeC,UAAAA,EAAE,EAAEK,MAAM,CAACM;AAA1B;AAAxC,OAFL;;AAKF;AACE,aAAOP,KAAP;AAjCJ;AAmCD;;AAED,eAAeD,OAAf","sourcesContent":["import { actionTypes } from './actions'\n\nexport const exampleInitialState = {\n  leaguesData: null,\n  seasonsData: null,\n  fixtureData: null,\n  lineupData: null,\n  error: false,\n  leagueInfo: {\n    status: false,\n    id: null\n  },\n  seasonInfo: {\n    status: false,\n    id: null\n  },\n  fixtureInfo: {\n    status: false,\n    id: null\n  },\n}\n\nfunction reducer(state = exampleInitialState, action) {\n\n  switch (action.type) {\n    case actionTypes.FAILURE:\n      return {\n        ...state,\n        ...{ error: action.error },\n      }\n\n\n    case actionTypes.LOAD_LEAGUES_SUCCESS:\n      return {\n        ...state,\n        ...{ leaguesData: action.data },\n      }\n\n    case actionTypes.LOAD_FIXTURES_SUCCESS:\n      return {\n        ...state,\n        ...{ fixtureData: action.data, seasonInfo: {status: true, id: action.payload.yearSeason } },\n      }\n\n    case actionTypes.LOAD_LINEUP_SUCCESS:\n      return {\n        ...state,\n        ...{ lineupData: action.data, seasonInfo: {status: true, id: action.payload } },\n      }\n\n    case actionTypes.LOAD_SEASONS_SUCCESS:\n      return {\n        ...state,\n        ...{ seasonsData: action.data, leagueInfo: {status: true, id: action.payload } },\n      }\n    \n    default:\n      return state\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}