{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { exampleInitialState } from './reducer';\nimport rootSaga from './saga';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","exampleInitialState","rootSaga","bindMiddleware","middleware","require","composeWithDevTools","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,WAAjD;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACT,eAAe,MAAf,4BAAmBO,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOP,eAAe,MAAf,4BAAmBO,UAAnB,EAAP;AACD,CAND;;AAQA,SAASG,cAAT,GAA4D;AAAA,MAApCC,YAAoC,uEAArBP,mBAAqB;AAC1D,MAAMQ,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,KAAK,GAAGZ,WAAW,CACvBE,WADuB,EAEvBQ,YAFuB,EAGvBL,cAAc,CAAC,CAACM,cAAD,CAAD,CAHS,CAAzB;AAMAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBV,QAAnB,CAAjB;AAEA,SAAOQ,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer, { exampleInitialState } from './reducer'\nimport rootSaga from './saga'\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension')\n    return composeWithDevTools(applyMiddleware(...middleware))\n  }\n  return applyMiddleware(...middleware)\n}\n\nfunction configureStore(initialState = exampleInitialState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer,\n    initialState,\n    bindMiddleware([sagaMiddleware])\n  )\n\n  store.sagaTask = sagaMiddleware.run(rootSaga)\n\n  return store\n}\n\nexport default configureStore\n"]},"metadata":{},"sourceType":"module"}