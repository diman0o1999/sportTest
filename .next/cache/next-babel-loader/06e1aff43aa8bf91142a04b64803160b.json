{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadLeaguesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadSeasonsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadFixturesSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadLineupSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, delay, put, take, takeLatest, takeEvery } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport { actionTypes, failure, loadLeaguesSuccess, loadSeasonsSuccess, loadFixturesSuccess, loadLineupSuccess } from './actions';\nes6promise.polyfill();\n\nfunction loadLeaguesSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadLeaguesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://v3.football.api-sports.io/leagues', {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n              \"x-rapidapi-key\": \"\".concat(process.env.x_rapidapi_key)\n            }\n          });\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          _context.next = 9;\n          return put(loadLeaguesSuccess(data));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(failure(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}\n\nfunction loadSeasonsSaga(action) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadSeasonsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return fetch('https://v3.football.api-sports.io/leagues?id=' + action.payload, {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n              \"x-rapidapi-key\": \"\".concat(process.env.x_rapidapi_key),\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': \"*\"\n            }\n          });\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context2.sent;\n          _context2.next = 9;\n          return put(loadSeasonsSuccess(data));\n\n        case 9:\n          _context2.next = 15;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 15;\n          return put(failure(_context2.t0));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\n\nfunction loadFixturesSaga(action) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadFixturesSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return fetch('https://v3.football.api-sports.io/fixtures?league=' + action.payload.idLeague + '&season=' + action.payload.yearSeason, {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n              \"x-rapidapi-key\": \"\".concat(process.env.x_rapidapi_key),\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': \"*\"\n            }\n          });\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context3.sent;\n          _context3.next = 9;\n          return put(loadFixturesSuccess(data));\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(failure(_context3.t0));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\n\nfunction loadLineupSaga(action) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadLineupSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return fetch('https://v3.football.api-sports.io/fixtures/lineups?fixture=' + action.payload, {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n              \"x-rapidapi-key\": \"\".concat(process.env.x_rapidapi_key),\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': \"*\"\n            }\n          });\n\n        case 3:\n          res = _context4.sent;\n          _context4.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context4.sent;\n          _context4.next = 9;\n          return put(loadLineupSuccess(data));\n\n        case 9:\n          _context4.next = 15;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 15;\n          return put(failure(_context4.t0));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 11]]);\n}\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeLatest(actionTypes.LOAD_LEAGUES, loadLeaguesSaga), takeEvery(actionTypes.LOAD_SEASONS, loadSeasonsSaga), takeEvery(actionTypes.LOAD_FIXTURES, loadFixturesSaga), takeEvery(actionTypes.LOAD_LINEUP, loadLineupSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/saga.js"],"names":["loadLeaguesSaga","loadSeasonsSaga","loadFixturesSaga","loadLineupSaga","rootSaga","all","call","delay","put","take","takeLatest","takeEvery","es6promise","actionTypes","failure","loadLeaguesSuccess","loadSeasonsSuccess","loadFixturesSuccess","loadLineupSuccess","polyfill","fetch","process","env","x_rapidapi_key","res","json","data","action","payload","idLeague","yearSeason","LOAD_LEAGUES","LOAD_SEASONS","LOAD_FIXTURES","LOAD_LINEUP"],"mappings":";;oDAOUA,e;qDAiBAC,e;qDAoBAC,gB;qDAqBAC,c;qDAqBAC,Q;;AAtFV,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAmE,oBAAnE;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,kBAA/B,EAAmDC,kBAAnD,EAAuEC,mBAAvE,EAA4FC,iBAA5F,QAAqH,WAArH;AAEAN,UAAU,CAACO,QAAX;;AAEA,SAAUnB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMoB,KAAK,CAAC,2CAAD,EAA8C;AACnE,sBAAU,KADyD;AAEnE,uBAAW;AACT,iCAAmB,2BADV;AAET,0CAAqBC,OAAO,CAACC,GAAR,CAAYC,cAAjC;AAFS;AAFwD,WAA9C,CAAX;;AAFhB;AAEUC,UAAAA,GAFV;AAAA;AASiB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AATjB;AASUC,UAAAA,IATV;AAAA;AAWI,iBAAMlB,GAAG,CAACO,kBAAkB,CAACW,IAAD,CAAnB,CAAT;;AAXJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaI,iBAAMlB,GAAG,CAACM,OAAO,aAAR,CAAT;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUb,eAAV,CAA0B0B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMP,KAAK,CAAC,kDAAkDO,MAAM,CAACC,OAA1D,EAAmE;AACxF,sBAAU,KAD8E;AAExF,uBAAW;AACT,iCAAmB,2BADV;AAET,0CAAqBP,OAAO,CAACC,GAAR,CAAYC,cAAjC,CAFS;AAGT,wBAAU,kBAHD;AAIT,8BAAgB,kBAJP;AAKT,6CAA+B;AALtB;AAF6E,WAAnE,CAAX;;AAFhB;AAEUC,UAAAA,GAFV;AAAA;AAYiB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAZjB;AAYUC,UAAAA,IAZV;AAAA;AAaI,iBAAMlB,GAAG,CAACQ,kBAAkB,CAACU,IAAD,CAAnB,CAAT;;AAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBI,iBAAMlB,GAAG,CAACM,OAAO,cAAR,CAAT;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUZ,gBAAV,CAA2ByB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMP,KAAK,CAAC,uDAAuDO,MAAM,CAACC,OAAP,CAAeC,QAAtE,GAAiF,UAAjF,GAA8FF,MAAM,CAACC,OAAP,CAAeE,UAA9G,EAA0H;AAC/I,sBAAU,KADqI;AAE/I,uBAAW;AACT,iCAAmB,2BADV;AAET,0CAAqBT,OAAO,CAACC,GAAR,CAAYC,cAAjC,CAFS;AAGT,wBAAU,kBAHD;AAIT,8BAAgB,kBAJP;AAKT,6CAA+B;AALtB;AAFoI,WAA1H,CAAX;;AAFhB;AAEUC,UAAAA,GAFV;AAAA;AAYiB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAZjB;AAYUC,UAAAA,IAZV;AAAA;AAaI,iBAAMlB,GAAG,CAACS,mBAAmB,CAACS,IAAD,CAApB,CAAT;;AAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBI,iBAAMlB,GAAG,CAACM,OAAO,cAAR,CAAT;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,SAAUX,cAAV,CAAyBwB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMP,KAAK,CAAC,gEAAgEO,MAAM,CAACC,OAAxE,EAAiF;AACtG,sBAAU,KAD4F;AAEtG,uBAAW;AACT,iCAAmB,2BADV;AAET,0CAAqBP,OAAO,CAACC,GAAR,CAAYC,cAAjC,CAFS;AAGT,wBAAU,kBAHD;AAIT,8BAAgB,kBAJP;AAKT,6CAA+B;AALtB;AAF2F,WAAjF,CAAX;;AAFhB;AAEUC,UAAAA,GAFV;AAAA;AAYiB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAZjB;AAYUC,UAAAA,IAZV;AAAA;AAaI,iBAAMlB,GAAG,CAACU,iBAAiB,CAACQ,IAAD,CAAlB,CAAT;;AAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBI,iBAAMlB,GAAG,CAACM,OAAO,cAAR,CAAT;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,CAAC,CACRK,UAAU,CAACG,WAAW,CAACkB,YAAb,EAA2B/B,eAA3B,CADF,EAERW,SAAS,CAACE,WAAW,CAACmB,YAAb,EAA2B/B,eAA3B,CAFD,EAGRU,SAAS,CAACE,WAAW,CAACoB,aAAb,EAA4B/B,gBAA5B,CAHD,EAIRS,SAAS,CAACE,WAAW,CAACqB,WAAb,EAA0B/B,cAA1B,CAJD,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeC,QAAf","sourcesContent":["import { all, call, delay, put, take, takeLatest, takeEvery } from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\n\nimport { actionTypes, failure, loadLeaguesSuccess, loadSeasonsSuccess, loadFixturesSuccess, loadLineupSuccess } from './actions'\n\nes6promise.polyfill()\n\nfunction* loadLeaguesSaga() {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues', {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`\n      }\n    })\n    const data = yield res.json()\n\n    yield put(loadLeaguesSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction* loadSeasonsSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/leagues?id=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadSeasonsSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction* loadFixturesSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures?league=' + action.payload.idLeague + '&season=' + action.payload.yearSeason, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadFixturesSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\n\nfunction* loadLineupSaga(action) {\n  try {\n    const res = yield fetch('https://v3.football.api-sports.io/fixtures/lineups?fixture=' + action.payload, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"v3.football.api-sports.io\",\n        \"x-rapidapi-key\": `${process.env.x_rapidapi_key}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    })\n    const data = yield res.json()\n    yield put(loadLineupSuccess(data))\n    \n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\n\nfunction* rootSaga() {\n  yield all([\n    takeLatest(actionTypes.LOAD_LEAGUES, loadLeaguesSaga),\n    takeEvery(actionTypes.LOAD_SEASONS, loadSeasonsSaga),\n    takeEvery(actionTypes.LOAD_FIXTURES, loadFixturesSaga),\n    takeEvery(actionTypes.LOAD_LINEUP, loadLineupSaga)\n  ])\n}\n\nexport default rootSaga\n"]},"metadata":{},"sourceType":"module"}