{"ast":null,"code":"var _jsxFileName = \"/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/LeagueSeasons.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport map from 'lodash/map';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SeasonFixture from './SeasonFixture';\nimport { loadFixtures } from '../actions';\nimport { seasonTempData } from '../temp/tempData';\n\nconst LeagueSeasons = ({\n  leagueId,\n  title\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: seasonsData,\n    1: setSeasonsData\n  } = useState(useSelector(state => state.seasonsData));\n\n  if (seasonsData === null) {\n    setSeasonsData(seasonTempData);\n  }\n\n  const seasonLink = id => {\n    const seasonInfo = useSelector(state => state.seasonInfo);\n\n    if (id != seasonId) {\n      dispatch(loadFixtures(leagueId, id));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: \"all_tournaments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, seasonsData && map(seasonsData, (item, key) => {\n    return __jsx(\"a\", {\n      key: key,\n      onClick: () => seasonLink(item.year),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    }, item.year);\n  })));\n};\n\nexport default LeagueSeasons;","map":{"version":3,"sources":["/home/gr/Work/TestReact/test-sport-appREP/sportTest/components/LeagueSeasons.jsx"],"names":["React","useState","map","useSelector","useDispatch","SeasonFixture","loadFixtures","seasonTempData","LeagueSeasons","leagueId","title","dispatch","seasonsData","setSeasonsData","state","seasonLink","id","seasonInfo","seasonId","item","key","year"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACzC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAACE,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACF,WAAhB,CAAZ,CAA9C;;AACA,MAAIA,WAAW,KAAK,IAApB,EAAyB;AACvBC,IAAAA,cAAc,CAACN,cAAD,CAAd;AACD;;AAED,QAAMQ,UAAU,GAAIC,EAAD,IAAQ;AACzB,UAAMC,UAAU,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,UAAhB,CAA9B;;AACA,QAAID,EAAE,IAAIE,QAAV,EAAoB;AAClBP,MAAAA,QAAQ,CAACL,YAAY,CAACG,QAAD,EAAWO,EAAX,CAAb,CAAR;AACD;AACF,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,IAAIV,GAAG,CAACU,WAAD,EAAc,CAACO,IAAD,EAAOC,GAAP,KAAe;AAC5C,WAAO;AAAG,MAAA,GAAG,EAAEA,GAAR;AAAa,MAAA,OAAO,EAAE,MAAML,UAAU,CAACI,IAAI,CAACE,IAAN,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDF,IAAI,CAACE,IAA1D,CAAP;AACD,GAFgB,CADrB,CAFF,CADJ;AAWD,CAzBH;;AA0BA,eAAeb,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport map from 'lodash/map'\nimport {useSelector, useDispatch} from 'react-redux'\nimport SeasonFixture from './SeasonFixture'\nimport { loadFixtures } from '../actions'\nimport {seasonTempData} from '../temp/tempData'\n\nconst LeagueSeasons = ({leagueId, title}) => {\n    const dispatch = useDispatch()\n    const [seasonsData, setSeasonsData] = useState(useSelector(state => state.seasonsData))\n    if (seasonsData === null){\n      setSeasonsData(seasonTempData)\n    }\n    \n    const seasonLink = (id) => {  \n      const seasonInfo = useSelector(state => state.seasonInfo)\n      if (id != seasonId) {\n        dispatch(loadFixtures(leagueId, id))\n      }\n    }\n\n    return (\n        <div>\n          <h1>{title}</h1>\n          <div className=\"all_tournaments\">\n            {seasonsData && map(seasonsData, (item, key) => {\n                return <a key={key} onClick={() => seasonLink(item.year)} >{item.year}</a>;\n              })\n            }\n          </div>\n        </div>\n    )\n  }\nexport default LeagueSeasons\n"]},"metadata":{},"sourceType":"module"}